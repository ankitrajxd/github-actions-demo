name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get commit SHA
        id: vars
        run: echo "COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Set output
        id: set-output
        run: echo "::set-output name=commit_sha::${{ env.COMMIT_SHA }}"

      - name: Build Docker Image
        run: docker build -t ankitrajxd/simple-node-app:${{ env.COMMIT_SHA }} .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image to Docker Hub
        run: docker push ankitrajxd/simple-node-app:${{ env.COMMIT_SHA }}

    outputs:
      commit_sha: ${{ steps.set-output.outputs.commit_sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH config
        run: |
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Copy SSH key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH into EC2 and Deploy
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << EOF
          docker pull ankitrajxd/simple-node-app:${{ needs.build.outputs.commit_sha }}
          CONTAINER_ID=$(docker ps -q --filter "ancestor=ankitrajxd/simple-node-app" --filter "status=running")
          if [ ! -z "$CONTAINER_ID" ]; then
            docker stop $CONTAINER_ID
            docker rm $CONTAINER_ID
          fi
          docker run -d -p 3000:3000 ankitrajxd/simple-node-app:${{ needs.build.outputs.commit_sha }}
          EOF